/**
 * @file
 * Applies a kaleidoscope effect to an image. This composition demonstrates the best way to fetch an image (or do other one-time tasks) within an image generator or image filter — use an [Allow First Event](vuo-node://vuo.event.allowFirst) node instead of a [Fire on Start](vuo-node://vuo.event.fireOnStart) node.
 * 
 * Image by Pexels on [Pixabay](https://pixabay.com/en/beach-surfing-wave-ocean-outdoors-1836366/)
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AllowFirstEvent2 [type="vuo.event.allowFirst" version="1.0.0" label="Allow First Event|<refresh>refresh\l|<event>event\l|<reset>reset\l|<firstEvent>firstEvent\r" pos="-180,-300" fillcolor="orange"];
FetchImage [type="vuo.image.fetch" version="2.0.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="30,-300" _url="\"Wave.jpg\""];
MakeKaleidoscopeImage [type="vuo.image.kaleidoscope" version="1.0.1" label="Make Kaleidoscope Image|<refresh>refresh\l|<image>image\l|<sides>sides\l|<angle>angle\l|<bladeCenter>bladeCenter\l|<imageCenter>imageCenter\l|<reflectOddSides>reflectOddSides\l|<reflectedImage>reflectedImage\r" pos="225,-270" _sides="16.000000" _bladeCenter="\{\"x\":0.000000,\"y\":0.000000\}" _imageCenter="\{\"x\":-1.000000,\"y\":0.000000\}" _reflectOddSides="true"];
MakeList [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="-18,-214" _2="15.000000"];
Multiply [type="vuo.math.multiply.VuoReal" version="2.0.0" label="Multiply|<refresh>refresh\l|<values>values\l|<product>product\r" pos="15,-225"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<width>width\r|<height>height\r|<time>time\r" _width_type="VuoInteger" _height_type="VuoInteger" _time_type="VuoReal"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<outputImage>outputImage\l" _outputImage_type="VuoImage"];

AllowFirstEvent2:firstEvent -> FetchImage:url;
FetchImage:image -> MakeKaleidoscopeImage:image;
MakeKaleidoscopeImage:reflectedImage -> PublishedOutputs:outputImage;
MakeList:list -> Multiply:values;
Multiply:product -> MakeKaleidoscopeImage:angle;
PublishedInputs:time -> MakeList:1;
PublishedInputs:width -> AllowFirstEvent2:event;
}

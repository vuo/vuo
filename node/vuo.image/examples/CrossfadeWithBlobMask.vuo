/**
 * @file
 * @brief Crossfade with Blob Mask
 * Fades from one image to another, using an animated noise mask.
 *
 * Images by Pexels on [Pixabay](https://pixabay.com/en/beach-surfing-wave-ocean-outdoors-1836366/) and Marat Gilyadzinov on [Unsplash](https://unsplash.com/photos/MYadhrkenNg).
 *
 * @lastSavedInVuoVersion 2.1.2
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
Add2 [type="vuo.math.add.VuoReal" version="2.1.0" label="Add|<refresh>refresh\l|<values>values\l|<sum>sum\r" pos="-480,285"];
ApplyMask [type="vuo.image.apply.mask" version="1.1.2" label="Apply Mask|<refresh>refresh\l|<image>image\l|<mask>mask\l|<maskedImage>maskedImage\r" pos="270,30"];
BlendImages [type="vuo.image.blend" version="1.2.2" label="Blend Images|<refresh>refresh\l|<background>background\l|<foreground>foreground\l|<blendMode>blendMode\l|<foregroundOpacity>foregroundOpacity\l|<replaceOpacity>replaceOpacity\l|<blended>blended\r" pos="450,15" fillcolor="blue" _blendMode="\"normal\"" _foregroundOpacity="1" _replaceOpacity="true"];
ChangeSpeed [type="vuo.time.changeSpeed" version="1.0.0" label="Change Speed|<refresh>refresh\l|<time>time\l|<speed>speed\l|<reset>reset\l|<changedTime>changedTime\r" pos="-105,75"];
GetImageHeight [type="vuo.image.get.height" version="1.0.0" label="Get Image Height|<refresh>refresh\l|<image>image\l|<height>height\r" pos="375,510"];
GetImageWidth [type="vuo.image.get.width" version="1.0.0" label="Get Image Width|<refresh>refresh\l|<image>image\l|<width>width\r" pos="375,495"];
MakeList2 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="-513,296" _1="1"];
MakeNoiseImage [type="vuo.image.make.noise" version="1.2.0" label="Make Noise Image|<refresh>refresh\l|<colorA>colorA\l|<colorB>colorB\l|<center>center\l|<time>time\l|<scale>scale\l|<type>type\l|<grid>grid\l|<tile>tile\l|<range>range\l|<rangeMode>rangeMode\l|<levels>levels\l|<roughness>roughness\l|<spacing>spacing\l|<width>width\l|<height>height\l|<image>image\r" pos="90,45" fillcolor="orange" _colorA="\{\"r\":0,\"g\":0,\"b\":0,\"a\":1\}" _colorB="\{\"r\":1,\"g\":1,\"b\":1,\"a\":1\}" _center="\{\"x\":0.0,\"y\":0.0\}" _type="\"gradient\"" _grid="\"triangular\"" _tile="false" _rangeMode="\"clamp\"" _levels="1" _roughness="0.5" _spacing="2.0"];
MakeRange [type="vuo.math.make.range.center.VuoReal" version="1.0.0" label="Make Range|<refresh>refresh\l|<center>center\l|<radius>radius\l|<range>range\r" pos="-165,165"];
Scale [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="-330,165" _start="1" _end="0" _limitToRange="false"];
Subtract [type="vuo.math.subtract.VuoReal" version="1.2.0" label="Subtract|<refresh>refresh\l|<a>a\l|<b>b\l|<difference>difference\r" pos="-495,210" _a="0"];
Subtract2 [type="vuo.math.subtract.VuoReal" version="1.2.0" label="Subtract|<refresh>refresh\l|<a>a\l|<b>b\l|<difference>difference\r" pos="-660,300" _a="1"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<time>time\r|<progress>progress\r|<startImage>startImage\r|<endImage>endImage\r|<Sharpness>Sharpness\r|<BlobScale>BlobScale\r|<BlobSpeed>BlobSpeed\r" _time_type="VuoReal" _progress_type="VuoReal" _startImage_type="VuoImage" _endImage_type="VuoImage" _Sharpness_type="VuoReal" _Sharpness="1" _Sharpness_suggestedMin="0" _Sharpness_suggestedMax="1" _Sharpness_suggestedStep="0.10000000000000001" _BlobScale_type="VuoReal" _BlobScale_suggestedMin="0.001" _BlobScale_suggestedMax="1." _BlobScale_suggestedStep="0.1" _BlobScale="0.20000000000000001" _BlobSpeed_type="VuoReal" _BlobSpeed_suggestedMin="0" _BlobSpeed_suggestedMax="4" _BlobSpeed="1" _BlobSpeed_suggestedStep="0.10000000000000001"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<outputImage>outputImage\l" _outputImage_type="VuoImage"];

Add2:sum -> Scale:scaledEnd;
ApplyMask:maskedImage -> BlendImages:foreground;
BlendImages:blended -> PublishedOutputs:outputImage;
ChangeSpeed:changedTime -> MakeNoiseImage:time;
GetImageHeight:height -> MakeNoiseImage:height;
GetImageWidth:width -> MakeNoiseImage:width;
MakeList2:list -> Add2:values;
MakeNoiseImage:image -> ApplyMask:mask;
MakeRange:range -> MakeNoiseImage:range;
PublishedInputs:BlobScale -> MakeNoiseImage:scale;
PublishedInputs:BlobSpeed -> ChangeSpeed:speed;
PublishedInputs:Sharpness -> Subtract2:b;
PublishedInputs:endImage -> ApplyMask:image;
PublishedInputs:endImage -> GetImageHeight:image;
PublishedInputs:endImage -> GetImageWidth:image;
PublishedInputs:progress -> Scale:value;
PublishedInputs:startImage -> BlendImages:background;
PublishedInputs:time -> ChangeSpeed:time;
Scale:scaledValue -> MakeRange:center;
Subtract2:difference -> MakeList2:2;
Subtract2:difference -> MakeRange:radius;
Subtract2:difference -> Subtract:b;
Subtract:difference -> Scale:scaledStart;
}

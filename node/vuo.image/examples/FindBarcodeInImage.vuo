/**
 * @file
 * @brief Find Barcode in Image
 * Receives live video, detects a barcode in it, and displays the result on the screen. Try running this composition while [streaming live video from an iPhone camera](https://vuo.org/node/370).
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AllowFirstEvent2 [type="vuo.event.allowFirst" version="1.0.0" label="Allow First Event|<refresh>refresh\l|<event>event\l|<reset>reset\l|<firstEvent>firstEvent\r" pos="90,570"];
ConvertFrameToImage [type="vuo.type.videoframe.image" version="1.0.0" label="Convert Frame to Image|<refresh>refresh\l|<frame>frame\l|<image>image\r" pos="585,300"];
ConvertFrameToImage2 [type="vuo.type.videoframe.image" version="1.0.0" label="Convert Frame to Image|<refresh>refresh\l|<frame>frame\l|<image>image\r" pos="300,510"];
FindBarcodeInImage [type="vuo.image.findBarcode2" version="2.0.0" label="Find Barcode in Image|<refresh>refresh\l|<image>image\l|<format>format\l|<barcode>barcode\r|<foundFormat>foundFormat\r|<rectangle>rectangle\r" pos="90,405" fillcolor="orange" _format="0"];
FireOnDisplayRefresh [type="vuo.event.fireOnDisplayRefresh" version="1.0.0" label="Fire on Display Refresh|<refresh>refresh\l|<requestedFrame>requestedFrame\r" pos="-150,720" fillcolor="yellow" _requestedFrame_eventThrottling="drop"];
IsGreaterThan2 [type="vuo.data.isGreaterThan.VuoReal" version="1.0.0" label="Is Greater Than|<refresh>refresh\l|<a>a\l|<b>b\l|<greaterThan>greaterThan\r" pos="465,720" _b="1"];
MakeLayerWithShadow [type="vuo.layer.make.realSize.shadow" version="2.1.0" label="Make Image Layer with Shadow|<refresh>refresh\l|<name>name\l|<image>image\l|<center>center\l|<opacity>opacity\l|<preservePhysicalSize>preservePhysicalSize\l|<shadowColor>shadowColor\l|<shadowBlur>shadowBlur\l|<shadowAngle>shadowAngle\l|<shadowDistance>shadowDistance\l|<layer>layer\r" pos="915,375" _name="\"\"" _center="\{\"x\":0.000000,\"y\":0.000000\}" _opacity="1.000000" _preservePhysicalSize="false" _shadowColor="\{\"r\":0,\"g\":0,\"b\":0,\"a\":1\}" _shadowBlur="3.000000" _shadowAngle="315.000000" _shadowDistance="0.000000"];
MakeList [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1244,206" fillcolor="blue"];
MakeScaledLayer [type="vuo.layer.make.scaled" version="3.0.0" label="Make Image Layer|<refresh>refresh\l|<image>image\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<opacity>opacity\l|<layer>layer\r" pos="375,195" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.000000,\"y\":0.000000\}" _rotation="0.000000" _width="2.000000" _opacity="1.000000"];
MakeTextImage [type="vuo.image.make.text" version="1.1.0" label="Make Text Image|<refresh>refresh\l|<text>text\l|<font>font\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<image>image\r" pos="390,405" _font="\{\"fontName\":\"LucidaGrande-Bold\",\"pointSize\":64,\"underline\":false,\"color\":\{\"r\":1,\"g\":1,\"b\":1,\"a\":1\},\"alignment\":\"left\",\"characterSpacing\":1.0096799999999999,\"lineSpacing\":1\}" _wrapWidth="0"];
MakeTextImage2 [type="vuo.image.make.text" version="1.1.0" label="Make Text Image|<refresh>refresh\l|<text>text\l|<font>font\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<image>image\r" pos="390,570" _text="\"\"" _font="\{\"fontName\":\"LucidaGrande-Bold\",\"pointSize\":64.000000,\"underline\":false,\"color\":\{\"r\":1.000000,\"g\":1.000000,\"b\":1.000000,\"a\":1.000000\},\"alignment\":\"left\",\"characterSpacing\":1.009680,\"lineSpacing\":1.000000\}" _wrapWidth="0"];
MeasureTime2 [type="vuo.time.measureTime" version="2.0.1" label="Measure Time|<refresh>refresh\l|<time>time\l|<start>start\l|<pause>pause\l|<reset>reset\l|<elapsedTime>elapsedTime\r" pos="285,720"];
ReceiveLiveVideo [type="vuo.video.receive2" version="2.0.0" label="Receive Live Video|<refresh>refresh\l|<device>device\l|<width>width\l|<height>height\l|<receivedFrame>receivedFrame\r" pos="-225,195" _device="null" _width="0" _height="0" _receivedFrame_eventThrottling="drop"];
RenderLayersToWindow [type="vuo.layer.render.window2" version="3.0.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="1290,195" fillcolor="blue" _multisampling="\"4\"" _updatedWindow_eventThrottling="enqueue"];
SelectInput3 [type="vuo.select.in.boolean.VuoImage" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="630,390"];

AllowFirstEvent2:firstEvent -> MakeTextImage2:text;
ConvertFrameToImage2:image -> FindBarcodeInImage:image;
ConvertFrameToImage:image -> MakeScaledLayer:image;
FindBarcodeInImage:barcode -> MakeTextImage:text;
FindBarcodeInImage:barcode -> MeasureTime2:reset;
FindBarcodeInImage:barcode -> MeasureTime2:start;
FireOnDisplayRefresh:requestedFrame -> AllowFirstEvent2:event;
FireOnDisplayRefresh:requestedFrame -> MeasureTime2:time;
IsGreaterThan2:greaterThan -> SelectInput3:which;
MakeLayerWithShadow:layer -> MakeList:2;
MakeList:list -> RenderLayersToWindow:layers;
MakeScaledLayer:layer -> MakeList:1;
MakeTextImage2:image -> SelectInput3:trueOption;
MakeTextImage:image -> SelectInput3:falseOption;
MeasureTime2:elapsedTime -> IsGreaterThan2:a;
ReceiveLiveVideo:receivedFrame -> ConvertFrameToImage2:frame;
ReceiveLiveVideo:receivedFrame -> ConvertFrameToImage:frame;
SelectInput3:out -> MakeLayerWithShadow:image;
}

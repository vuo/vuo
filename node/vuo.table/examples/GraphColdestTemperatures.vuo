/**
 * @file
 * Draws a graph of temperatures (in Celsius) by location, ordered from warmest to coldest.
 *
 * Data source: Coldest recorded temperature on each continent from https://en.wikipedia.org/wiki/List_of_weather_records
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
Add [type="vuo.math.add.VuoReal" version="2.1.0" label="Add|<refresh>refresh\l|<values>values\l|<sum>sum\r" pos="525,1050"];
ArrangeLayersInGrid [type="vuo.layer.arrange.grid" version="1.1.0" label="Arrange Layers in Grid|<refresh>refresh\l|<layers>layers\l|<scaleToFit>scaleToFit\l|<anchor>anchor\l|<center>center\l|<width>width\l|<columns>columns\l|<height>height\l|<rows>rows\l|<griddedLayer>griddedLayer\r" pos="1200,150" _scaleToFit="false" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0,\"y\":-0.5\}" _width="1.8999999999999999" _height="0.10000000000000001" _rows="1"];
ArrangeLayersInGrid2 [type="vuo.layer.arrange.grid" version="1.1.0" label="Arrange Layers in Grid|<refresh>refresh\l|<layers>layers\l|<scaleToFit>scaleToFit\l|<anchor>anchor\l|<center>center\l|<width>width\l|<columns>columns\l|<height>height\l|<rows>rows\l|<griddedLayer>griddedLayer\r" pos="1215,435" _scaleToFit="false" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0,\"y\":-0.44999998807907104\}" _width="1.8999999999999999" _height="1" _rows="1"];
CombineLayers2 [type="vuo.layer.combine" version="1.0.0" label="Combine Layers|<refresh>refresh\l|<transform>transform\l|<layers>layers\l|<layer>layer\r" pos="1275,735"];
ConvertRealTo2DPoint [type="vuo.type.real.point2d.y" version="1.0.1" label="Convert Real to 2D Point|<refresh>refresh\l|<y>y\l|<point2d>point2d\r" pos="1020,705"];
ConvertRealTo2DPoint2 [type="vuo.type.real.point2d.y" version="1.0.1" label="Convert Real to 2D Point|<refresh>refresh\l|<y>y\l|<point2d>point2d\r" pos="1020,915"];
ConvertTextToReal [type="vuo.type.text.real" version="1.0.1" label="Convert Text to Real|<refresh>refresh\l|<text>text\l|<real>real\r" pos="810,705"];
ConvertTextToReal2 [type="vuo.type.text.real" version="1.0.1" label="Convert Text to Real|<refresh>refresh\l|<text>text\l|<real>real\r" pos="420,855"];
CountItemsInList [type="vuo.list.count.VuoLayer" version="1.0.0" label="Count Items in List|<refresh>refresh\l|<list>list\l|<itemCount>itemCount\r" pos="1200,330"];
CountItemsInList2 [type="vuo.list.count.VuoLayer" version="1.0.0" label="Count Items in List|<refresh>refresh\l|<list>list\l|<itemCount>itemCount\r" pos="1260,615"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="15,75" fillcolor="lime" _started_eventThrottling="enqueue"];
GetTableColumn [type="vuo.table.get.column.VuoInteger" version="1.0.0" label="Get Table Column|<refresh>refresh\l|<table>table\l|<column>column\l|<includeHeader>includeHeader\l|<values>values\r" pos="615,150" fillcolor="orange" _column="1" _includeHeader="false"];
GetTableColumn2 [type="vuo.table.get.column.VuoInteger" version="1.0.0" label="Get Table Column|<refresh>refresh\l|<table>table\l|<column>column\l|<includeHeader>includeHeader\l|<values>values\r" pos="615,435" fillcolor="orange" _column="3" _includeHeader="false"];
MakeFont [type="vuo.font.make" version="1.0.0" label="Make Font|<refresh>refresh\l|<fontName>fontName\l|<pointSize>pointSize\l|<underlined>underlined\l|<color>color\l|<horizontalAlignment>horizontalAlignment\l|<characterSpacing>characterSpacing\l|<lineSpacing>lineSpacing\l|<font>font\r" pos="720,960" _fontName="\"Avenir-Medium\"" _pointSize="20" _underlined="false" _horizontalAlignment="\"left\"" _characterSpacing="1." _lineSpacing="1."];
MakeHSLColor [type="vuo.color.make.hsl" version="2.0.0" label="Make HSL Color|<refresh>refresh\l|<hue>hue\l|<saturation>saturation\l|<lightness>lightness\l|<opacity>opacity\l|<color>color\r" pos="495,750" _saturation="1.0" _lightness="0.5" _opacity="1.0"];
MakeList2 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="492,1061" _2="0.074999999999999997"];
MakeList3 [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1242,761"];
MakeList4 [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1439,161" fillcolor="blue"];
MakeOvalLayer [type="vuo.layer.make.oval2" version="2.0.0" label="Make Oval Layer|<refresh>refresh\l|<color>color\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<sharpness>sharpness\l|<opacity>opacity\l|<layer>layer\r" pos="1065,750" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _rotation="0.0" _width="0.050000000000000003" _height="0.050000000000000003" _sharpness="1.0" _opacity="1.0"];
MakeTableFromText [type="vuo.table.make.text" version="1.0.0" label="Make Table from Text|<refresh>refresh\l|<text>text\l|<format>format\l|<table>table\r" pos="195,150" fillcolor="orange" _text="\"Continent,Country,Temperature,Year\\nAfrica,Morocco,-23.9,1935\\nAntarctica,,-89.2,1983\\nAsia,Russia,-67.8,1933\\nEurope,Russia,-58.1,1978\\nN. America,Greenland,-66.1,1954\\nS. America,Argentina,-32.8,1907\\nOceania,New Zealand,-25.6,1903\"" _format="\"csv\""];
MakeTextLayer [type="vuo.layer.make.text2" version="2.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<opacity>opacity\l|<layer>layer\r" pos="855,270" _font="\{\"fontName\":\"Avenir-Heavy\",\"pointSize\":18,\"underline\":false,\"color\":\{\"r\":1,\"g\":1,\"b\":1,\"a\":1\},\"alignment\":\"left\",\"characterSpacing\":1,\"lineSpacing\":1\}" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.0,\"y\":0.0\}" _wrapWidth="Infinity" _opacity="1.0"];
MakeTextLayer2 [type="vuo.layer.make.text2" version="2.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<opacity>opacity\l|<layer>layer\r" pos="1065,945" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _wrapWidth="Infinity" _opacity="1.0"];
ProcessList3 [type="vuo.list.process.VuoText.VuoLayer" version="1.0.1" label="Process List|<refresh>refresh\l|<fire>fire\l|<processedItem>processedItem\l|<processedList>processedList\r|<processItem>processItem\r" pos="810,150" _processedList_eventThrottling="enqueue" _processItem_eventThrottling="enqueue"];
ProcessList4 [type="vuo.list.process.VuoText.VuoLayer" version="1.0.1" label="Process List|<refresh>refresh\l|<fire>fire\l|<processedItem>processedItem\l|<processedList>processedList\r|<processItem>processItem\r" pos="810,435" _processedList_eventThrottling="enqueue" _processItem_eventThrottling="enqueue"];
RenderLayersToWindow [type="vuo.layer.render.window2" version="3.0.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="1485,150" fillcolor="blue" _multisampling="\"4\"" _updatedWindow_eventThrottling="enqueue"];
Scale [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="330,900" _start="-90" _end="-20" _scaledStart="0" _scaledEnd="1" _limitToRange="false"];
Scale2 [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="330,750" _start="-90" _end="-20" _scaledStart="0.5" _scaledEnd="0.59999999999999998" _limitToRange="false"];
SortTable [type="vuo.table.sort.VuoInteger" version="1.0.0" label="Sort Table|<refresh>refresh\l|<table>table\l|<column>column\l|<sortType>sortType\l|<sortOrder>sortOrder\l|<firstRowIsHeader>firstRowIsHeader\l|<sortedTable>sortedTable\r" pos="420,150" fillcolor="orange" _column="3" _sortType="\"number\"" _sortOrder="\"descending\"" _firstRowIsHeader="true"];

Add:sum -> ConvertRealTo2DPoint2:y;
ArrangeLayersInGrid2:griddedLayer -> MakeList4:2;
ArrangeLayersInGrid:griddedLayer -> MakeList4:1;
CombineLayers2:layer -> ProcessList4:processedItem;
ConvertRealTo2DPoint2:point2d -> MakeTextLayer2:center;
ConvertRealTo2DPoint:point2d -> MakeOvalLayer:center;
ConvertTextToReal2:real -> Scale2:value;
ConvertTextToReal:real -> Scale:value;
CountItemsInList2:itemCount -> ArrangeLayersInGrid2:columns;
CountItemsInList:itemCount -> ArrangeLayersInGrid:columns;
FireOnStart:started -> MakeTableFromText:text;
GetTableColumn2:values -> ProcessList4:fire;
GetTableColumn:values -> ProcessList3:fire;
MakeFont:font -> MakeTextLayer2:font;
MakeHSLColor:color -> MakeFont:color;
MakeHSLColor:color -> MakeOvalLayer:color;
MakeList2:list -> Add:values;
MakeList3:list -> CombineLayers2:layers;
MakeList4:list -> RenderLayersToWindow:layers;
MakeOvalLayer:layer -> MakeList3:1;
MakeTableFromText:table -> SortTable:table;
MakeTextLayer2:layer -> MakeList3:2;
MakeTextLayer:layer -> ProcessList3:processedItem;
ProcessList3:processItem -> MakeTextLayer:text;
ProcessList3:processedList -> ArrangeLayersInGrid:layers;
ProcessList3:processedList -> CountItemsInList:list;
ProcessList4:processItem -> ConvertTextToReal2:text;
ProcessList4:processItem -> ConvertTextToReal:text;
ProcessList4:processItem -> MakeTextLayer2:text;
ProcessList4:processedList -> ArrangeLayersInGrid2:layers;
ProcessList4:processedList -> CountItemsInList2:list;
Scale2:scaledValue -> MakeHSLColor:hue;
Scale:scaledValue -> ConvertRealTo2DPoint:y;
Scale:scaledValue -> MakeList2:1;
SortTable:sortedTable -> GetTableColumn2:table;
SortTable:sortedTable -> GetTableColumn:table;
}

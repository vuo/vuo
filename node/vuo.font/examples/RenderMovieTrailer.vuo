/**
 * @file
 * Demonstrates using the [Make Font](vuo-node://vuo.font.make) node to dynamically change font parameters.
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AllowFirstEvent [type="vuo.event.allowFirst" version="1.0.0" label="Allow First Event|<refresh>refresh\l|<event>event\l|<reset>reset\l|<firstEvent>firstEvent\r" pos="-510,615" fillcolor="lime"];
CalculateSine [type="vuo.math.sin" version="1.0.0" label="Calculate Sine|<refresh>refresh\l|<angle>angle\l|<sine>sine\r" pos="-30,405"];
CycleThroughList2 [type="vuo.list.cycle2.VuoText" version="2.0.0" label="Cycle through List|<refresh>refresh\l|<goForward>goForward\l|<goBackward>goBackward\l|<goToFirst>goToFirst\l|<list>list\l|<wrapMode>wrapMode\l|<item>item\r|<position>position\r" pos="255,150" _wrapMode="\"wrap\""];
FireOnDisplayRefresh [type="vuo.event.fireOnDisplayRefresh" version="1.0.0" label="Fire on Display Refresh|<refresh>refresh\l|<requestedFrame>requestedFrame\r" pos="-705,660" fillcolor="lime" _requestedFrame_eventThrottling="drop"];
IsGreaterThan3 [type="vuo.data.isGreaterThan.VuoReal" version="1.0.0" label="Is Greater Than|<refresh>refresh\l|<a>a\l|<b>b\l|<greaterThan>greaterThan\r" pos="-165,660" _b="3"];
MakeFont [type="vuo.font.make" version="1.0.0" label="Make Font|<refresh>refresh\l|<fontName>fontName\l|<pointSize>pointSize\l|<underlined>underlined\l|<color>color\l|<horizontalAlignment>horizontalAlignment\l|<characterSpacing>characterSpacing\l|<lineSpacing>lineSpacing\l|<font>font\r" pos="345,390" fillcolor="orange" _fontName="\"Copperplate\"" _pointSize="72.000000" _underlined="false" _horizontalAlignment="\"left\"" _lineSpacing="1.000000"];
MakeList [type="vuo.list.make.1.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="704,386" fillcolor="blue"];
MakeList11 [type="vuo.list.make.8.VuoText" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<3>3\l|<4>4\l|<5>5\l|<6>6\l|<7>7\l|<8>8\l|<list>list\r" pos="193,206" _1="\"in a WORLD\"" _2="\"where ANYTHING\"" _3="\"is POSSIBLE\"" _5="\"a HERO will rise\"" _6="\"and an EMPIRE\"" _7="\"will FALL\""];
MakeRGBColor [type="vuo.color.make.rgb" version="2.0.0" label="Make RGB Color|<refresh>refresh\l|<red>red\l|<green>green\l|<blue>blue\l|<opacity>opacity\l|<color>color\r" pos="120,360" _red="1.000000" _green="1.000000" _blue="1.000000"];
MakeTextLayer [type="vuo.layer.make.text2" version="2.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<opacity>opacity\l|<layer>layer\r" pos="525,375" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.000000,\"y\":0.000000\}" _wrapWidth="Infinity" _opacity="1.0"];
MeasureTime [type="vuo.time.measureTime" version="2.0.1" label="Measure Time|<refresh>refresh\l|<time>time\l|<start>start\l|<pause>pause\l|<reset>reset\l|<elapsedTime>elapsedTime\r" pos="-345,660"];
RenderLayersToWindow2 [type="vuo.layer.render.window2" version="3.0.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="750,375" fillcolor="blue" _multisampling="\"4\"" _updatedWindow_eventThrottling="enqueue"];
Scale [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="150,465" _start="0.000000" _end="3.000000" _scaledStart="1.000000" _scaledEnd="1.500000" _limitToRange="false"];
Scale3 [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="-150,405" _start="0.000000" _end="3.000000" _scaledStart="0.000000" _scaledEnd="180.000000" _limitToRange="false"];
SelectOutput [type="vuo.select.out.boolean.event" version="2.0.0" label="Select Output|<refresh>refresh\l|<which>which\l|<in>in\l|<falseOption>falseOption\r|<trueOption>trueOption\r" pos="15,780"];

AllowFirstEvent:firstEvent -> CycleThroughList2:goForward;
AllowFirstEvent:firstEvent -> MeasureTime:start;
AllowFirstEvent:firstEvent -> Scale3:value;
CalculateSine:sine -> MakeRGBColor:opacity;
CycleThroughList2:item -> MakeTextLayer:text;
FireOnDisplayRefresh:requestedFrame -> AllowFirstEvent:event;
FireOnDisplayRefresh:requestedFrame -> MeasureTime:time;
IsGreaterThan3:greaterThan -> SelectOutput:which;
MakeFont:font -> MakeTextLayer:font;
MakeList11:list -> CycleThroughList2:list;
MakeList:list -> RenderLayersToWindow2:layers;
MakeRGBColor:color -> MakeFont:color;
MakeTextLayer:layer -> MakeList:1;
MeasureTime:elapsedTime -> IsGreaterThan3:a;
MeasureTime:elapsedTime -> Scale3:value;
MeasureTime:elapsedTime -> Scale:value;
Scale3:scaledValue -> CalculateSine:angle;
Scale:scaledValue -> MakeFont:characterSpacing;
SelectOutput:trueOption -> CycleThroughList2:goForward;
SelectOutput:trueOption -> MeasureTime:reset;
SelectOutput:trueOption -> MeasureTime:start;
}

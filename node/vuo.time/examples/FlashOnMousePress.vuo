/**
 * @file
 * @brief Flash on Mouse Press
 * Repeatedly changes the color of a rectangle for a period of time after the mouse is pressed.
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
AllowFirstEvent [type="vuo.event.allowFirst" version="1.0.0" label="Allow First Event|<refresh>refresh\l|<event>event\l|<reset>reset\l|<firstEvent>firstEvent\r" pos="-315,255" fillcolor="lime"];
ConvertRelativeToAbsolute2 [type="vuo.math.relative.absolute.VuoReal" version="1.0.0" label="Convert Relative to Absolute|<refresh>refresh\l|<relativeValues>relativeValues\l|<absoluteValues>absoluteValues\r" pos="-120,315"];
FireOnDisplayRefresh [type="vuo.event.fireOnDisplayRefresh" version="1.0.0" label="Fire on Display Refresh|<refresh>refresh\l|<requestedFrame>requestedFrame\r" pos="-375,180" fillcolor="lime" _requestedFrame_eventThrottling="drop"];
MakeColorLayer [type="vuo.layer.make.rect" version="1.0.0" label="Make Rectangle Layer|<refresh>refresh\l|<color>color\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<sharpness>sharpness\l|<roundness>roundness\l|<opacity>opacity\l|<layer>layer\r" pos="735,300" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.0,\"y\":0.0\}" _rotation="0.0" _width="1" _height="0.20000000000000001" _sharpness="1.0" _roundness="0.0" _opacity="1.0"];
MakeList [type="vuo.list.make.5.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<3>3\l|<4>4\l|<5>5\l|<list>list\r" pos="-153,326" _1="0" _2="0.5" _3="0.5" _4="0.5" _5="0.5"];
MakeList7 [type="vuo.list.make.1.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="929,311" fillcolor="blue"];
MeasureTime [type="vuo.time.measureTime" version="2.0.1" label="Measure Time|<refresh>refresh\l|<time>time\l|<start>start\l|<pause>pause\l|<reset>reset\l|<elapsedTime>elapsedTime\r" pos="-60,180" fillcolor="orange"];
ReceiveMouseButtons [type="vuo.mouse.button2" version="2.0.0" label="Receive Mouse Buttons|<refresh>refresh\l|<window>window\l|<button>button\l|<modifierKey>modifierKey\l|<pressed>pressed\r|<released>released\r" pos="-345,60" fillcolor="lime" _button="\"left\"" _modifierKey="\"any\"" _pressed_eventThrottling="enqueue" _released_eventThrottling="enqueue"];
RenderLayersToWindow [type="vuo.layer.render.window2" version="3.0.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="975,300" fillcolor="blue" _multisampling="\"4\"" _updatedWindow_eventThrottling="enqueue"];
Schedule [type="vuo.time.schedule" version="1.0.0" label="Schedule|<refresh>refresh\l|<time>time\l|<schedule>schedule\l|<durationType>durationType\l|<loop>loop\l|<elapsedTime1>elapsedTime1\r|<elapsedTime2>elapsedTime2\r|<elapsedTime3>elapsedTime3\r|<elapsedTime4>elapsedTime4\r|<elapsedTime5>elapsedTime5\r|<elapsedTime6>elapsedTime6\r|<elapsedTime7>elapsedTime7\r|<elapsedTime8>elapsedTime8\r" pos="150,300" fillcolor="orange" _durationType="\"single\"" _loop="\"none\""];
SelectInput2 [type="vuo.select.in.boolean.VuoColor" version="2.0.0" label="Select Input|<refresh>refresh\l|<which>which\l|<falseOption>falseOption\l|<trueOption>trueOption\l|<out>out\r" pos="555,300" _falseOption="\{\"r\":0.19214160740375519,\"g\":0.19212634861469269,\"b\":0.19212634861469269,\"a\":1\}" _trueOption="\{\"r\":0,\"g\":0,\"b\":1,\"a\":1\}"];
Toggle [type="vuo.logic.toggle" version="1.0.0" label="Toggle|<refresh>refresh\l|<toggle>toggle\l|<value>value\r" pos="405,315"];

AllowFirstEvent:firstEvent -> MakeList:1;
AllowFirstEvent:firstEvent -> SelectInput2:which;
ConvertRelativeToAbsolute2:absoluteValues -> Schedule:schedule;
FireOnDisplayRefresh:requestedFrame -> AllowFirstEvent:event;
FireOnDisplayRefresh:requestedFrame -> MeasureTime:time;
MakeColorLayer:layer -> MakeList7:1;
MakeList7:list -> RenderLayersToWindow:layers;
MakeList:list -> ConvertRelativeToAbsolute2:relativeValues;
MeasureTime:elapsedTime -> Schedule:time;
ReceiveMouseButtons:pressed -> MeasureTime:reset;
ReceiveMouseButtons:pressed -> MeasureTime:start;
RenderLayersToWindow:updatedWindow -> ReceiveMouseButtons:window [style=invis];
Schedule:elapsedTime1 -> Toggle:toggle;
Schedule:elapsedTime2 -> Toggle:toggle;
Schedule:elapsedTime3 -> Toggle:toggle;
Schedule:elapsedTime4 -> Toggle:toggle;
SelectInput2:out -> MakeColorLayer:color;
Toggle:value -> SelectInput2:which;
}

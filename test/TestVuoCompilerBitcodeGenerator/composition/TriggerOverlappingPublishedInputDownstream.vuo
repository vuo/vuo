/**
 * @file
 * Test composition.
 *
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see https://vuo.org/license.
 */

digraph G
{
Count3 [type="vuo.math.count.VuoInteger" version="1.0.0" label="Count|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<setCount>setCount\l|<count>count\r" pos="240,105" _increment="1" _decrement="1" _setCount="0"];
DivideWithRemainder [type="vuo.math.divide.VuoInteger" version="2.0.1" label="Divide with Remainder|<refresh>refresh\l|<a>a\l|<b>b\l|<quotient>quotient\r|<remainder>remainder\r" pos="390,210"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="75,45" _started_eventThrottling="enqueue"];
ShareValue2 [type="vuo.data.share.VuoInteger" version="1.0.0" label="Share Value|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="135,225"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<A>A\r" _A_type="VuoInteger" _A="0"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<Remainder>Remainder\l" _Remainder_type="VuoInteger"];

Count3:count -> DivideWithRemainder:b;
DivideWithRemainder:remainder -> PublishedOutputs:Remainder;
FireOnStart:started -> Count3:increment;
PublishedInputs:A -> ShareValue2:value;
ShareValue2:sameValue -> DivideWithRemainder:a;
}

/**
 * @file
 * Test composition.
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see https://vuo.org/license.
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
Count [type="vuo.math.count.VuoReal" version="1.0.0" label="Count|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<setCount>setCount\l|<count>count\r" pos="360,90" _increment="1.0" _decrement="1.0" _setCount="0.0"];
Delay [type="vuo.test.delay" version="1.0.0" label="Delay|<refresh>refresh\l|<seconds>seconds\l|<event>event\r" pos="360,180" _seconds="1"];
HoldValue [type="vuo.data.hold2.VuoReal" version="3.0.0" label="Hold Value|<refresh>refresh\l|<update>update\l|<value>value\l|<heldValue>heldValue\r" pos="495,135"];
PlayMovie [type="vuo.video.play" version="2.0.3" label="Play Movie|<refresh>refresh\l|<play>play\l|<pause>pause\l|<setTime>setTime\l|<url>url\l|<loop>loop\l|<playbackRate>playbackRate\l|<optimization>optimization\l|<decodedVideo>decodedVideo\r|<decodedAudio>decodedAudio\r|<finishedPlayback>finishedPlayback\r" pos="105,105" _setTime="\"\"" _loop="\"none\"" _playbackRate="1" _optimization="\"auto\"" _decodedVideo_eventThrottling="enqueue" _decodedAudio_eventThrottling="enqueue" _finishedPlayback_eventThrottling="enqueue"];
ShareValue [type="vuo.data.share.VuoText" version="1.0.0" label="Avoid nodeInstanceTriggerUpdate|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="-180,150"];
SnapValue [type="vuo.math.snap.VuoReal" version="1.0.0" label="Snap Value|<refresh>refresh\l|<value>value\l|<spacing>spacing\l|<center>center\l|<snappedValue>snappedValue\r" pos="630,135" _spacing="100" _center="0.0"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<URL>URL\r" _URL_type="VuoText" _URL="\"\""];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<FrameCount>FrameCount\l" _FrameCount_type="VuoReal"];

Count:count -> HoldValue:value;
Delay:event -> HoldValue:update;
HoldValue:heldValue -> SnapValue:value;
PlayMovie:decodedVideo -> Count:increment [event=true];
PlayMovie:finishedPlayback -> Delay:seconds;
PublishedInputs:URL -> ShareValue:value;
ShareValue:sameValue -> PlayMovie:play;
ShareValue:sameValue -> PlayMovie:url;
SnapValue:snappedValue -> PublishedOutputs:FrameCount;
}

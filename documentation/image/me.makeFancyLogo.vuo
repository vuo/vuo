/**
 * @file
 * Composition used in Vuo Manual illustrations.
 *
 * @createdInVuoVersion 2.0.0
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see https://vuo.org/license.
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
Curve [type="vuo.motion.curve.VuoReal" version="2.0.0" label="Curve|<refresh>refresh\l|<time>time\l|<startPosition>startPosition\l|<endPosition>endPosition\l|<duration>duration\l|<curve>curve\l|<easing>easing\l|<loop>loop\l|<phase>phase\l|<value>value\r" pos="255,135" _endPosition="5" _duration="1." _curve="\"quadratic\"" _easing="\"in\"" _loop="\"mirror\"" _phase="0.0"];
DilateImage [type="vuo.image.dilate" version="1.0.0" label="Dilate Image|<refresh>refresh\l|<image>image\l|<shape>shape\l|<radius>radius\l|<rescind>rescind\l|<dilatedImage>dilatedImage\r" pos="450,135" fillcolor="magenta" _shape="\"disc\"" _rescind="false"];
FetchImage [type="vuo.image.fetch" version="2.0.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="240,330" _url="\"CompanyLogo.png\""];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="0,330" fillcolor="lime" _started_eventThrottling="enqueue"];
MakeImageLayer [type="vuo.layer.make.scaled" version="3.0.0" label="Make Image Layer|<refresh>refresh\l|<image>image\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<opacity>opacity\l|<layer>layer\r" pos="615,135" fillcolor="magenta" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.0,\"y\":0.0\}" _rotation="0.0" _width="2.0" _opacity="1.0"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<Time>Time\r" _Time_type="VuoReal"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<Layer>Layer\l" _Layer_type="VuoLayer"];

Curve:value -> DilateImage:radius;
DilateImage:dilatedImage -> MakeImageLayer:image;
FetchImage:image -> DilateImage:image;
FireOnStart:started -> FetchImage:url;
MakeImageLayer:layer -> PublishedOutputs:Layer;
PublishedInputs:Time -> Curve:time;
}

/**
 * @file
 * Composition used in Vuo Manual illustrations.
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2023 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see https://vuo.org/license.
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
FireOnDisplayRefresh [type="vuo.event.fireOnDisplayRefresh" version="1.0.0" label="Fire on Display Refresh|<refresh>refresh\l|<requestedFrame>requestedFrame\r" pos="45,285" fillcolor="lime" _requestedFrame_eventThrottling="drop"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="45,165" fillcolor="lime" _started_eventThrottling="enqueue"];
MakeList4 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="237,296" _2="10.000000"];
MakeTextImage [type="vuo.image.make.text" version="1.1.0" label="Make Text Image|<refresh>refresh\l|<text>text\l|<font>font\l|<rotation>rotation\l|<wrapWidth>wrapWidth\l|<image>image\r" pos="255,165" _text="\"Hello World!\"" _font="\{\"fontName\":\"Helvetica\",\"pointSize\":96.000000,\"underline\":false,\"color\":\{\"r\":1.000000,\"g\":1.000000,\"b\":1.000000,\"a\":1.000000\},\"alignment\":\"left\",\"characterSpacing\":1.000000,\"lineSpacing\":1.000000\}" _wrapWidth="0"];
Multiply [type="vuo.math.multiply.VuoReal" version="2.0.0" label="Multiply|<refresh>refresh\l|<values>values\l|<product>product\r" pos="270,285"];
RenderImageToWindow [type="vuo.image.render.window2" version="4.0.0" label="Render Image to Window|<refresh>refresh\l|<image>image\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="585,165" fillcolor="blue" _updatedWindow_eventThrottling="enqueue"];
TwirlImage2 [type="vuo.image.twirl2" version="2.1.1" label="Twirl Image|<refresh>refresh\l|<image>image\l|<center>center\l|<angle>angle\l|<radius>radius\l|<twirledImage>twirledImage\r" pos="435,165" _center="\{\"x\":0,\"y\":0\}" _radius="0.500000"];

FireOnDisplayRefresh:requestedFrame -> MakeList4:1;
FireOnStart:started -> MakeTextImage:text;
MakeList4:list -> Multiply:values;
MakeTextImage:image -> TwirlImage2:image;
Multiply:product -> TwirlImage2:angle;
TwirlImage2:twirledImage -> RenderImageToWindow:image;
}
